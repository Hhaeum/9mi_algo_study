# 1m^2의 넓이에 자라는 참외 개수 헤아림 참외밭 너비 구하기
# ㄱ자거나 90, 180, 70 회전한 모양의 육각형들
# 동쪽 1 서쪽 2 남쪽 3 북쪽 4

N = int(input()) # 밭에서 자라는 참외의 수 개 / m^2
farm = [(0, 0)] * 6
sum_v = 0
for i in range(6):
    d, m = map(int, input().split())
    farm[i] = (d, m)

# 육각형을 잘라서 펼친다고 생각해보면 => 6개의 원소를 가진 배열이라고 생각한다.
# 내가 원하는 지점만 찾는다면 그 다음 어떤 요소가 위치하는 지 알 수 있다.  
# 파이썬에서는 배열에 마이너스 요소 -1~-N를 쓸 수 있기 때문에 => 원형 큐와 비슷?
# 어떤 위치에 존재하던 특정 칸 수만큼 옆으로 이동하면 내가 원하는 변의 길이를 찾을 수 있다. 
# 무조건, 두번 반복되는 방향이 들어오는 곳이 빈 공간이다. -> 이것만 찾아주면 된다.
# [i-3][i-2][i-1][i] 이 빈 공간에서 구해지는 길이라면
# [i-2]*[i-1] = 빈 공간의 너비라는 것 처럼 . [i-4][i-5]에는 가장 긴 변의 길이가 들어간다.
# 배열을 원이라고 생각하면 [i+1][i+2] = [i-5][i-4]와 같으나 인덱스 에러가 일어날 가능성이 존재하기 때문에 빼기를 사용한다.


for i in range(6):
    if farm[i][0]== farm[i-2][0] and farm[i-1][0] == farm[i-3][0]: # 반복된다면
        sum_v += farm[i-3][1]*farm[i-2][1] # [i-3] 반복의 시작 * 그다음 = 작은 사각형 1 
        sum_v += farm[i][1]*farm[i-5][1] # [i] 반복의 마지막 * [i-5] (= [i+1]) 나의 다음 길이를 곱한걸 더하면 결국 모든 너비를 구할 수 있다.
        break

print(sum_v * N)



