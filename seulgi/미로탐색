from collections import deque

N, M = map(int, input().split())
arr = [list(map(int, input())) for _ in range(N)]
visited = [[0] * M for _ in range(N)]
mn_cnt = 100*100

Q = deque([(0, 0, 1)])  # 초기 출발지 0, 0 / 이동한 거리 1
visited[0][0] = 1       # 출발지 방문 기록

while Q:    # Q에 값이 있을동안
    ci, cj, cnt = Q.popleft()   # Q의 첫번째 원소가 현재 위치, 현재 이동 거리
    if cnt >= mn_cnt:   # cnt가 mn_cnt 보다 같거나 크다면
        break           # break / break보다는 continue 쓰는게 더 정확하다고 함
    if ci == N-1 and cj == M-1:     # 현재 위치 = 도착 위치라면
        if cnt < mn_cnt:            # (이 코드는 생략 가능)
            mn_cnt = cnt            # mn_cnt 갱신
        break

    for di, dj in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
        ni, nj = ci + di, cj + dj   # 다음 위치 = 현재 위치에서 네방향
        if 0 <= ni < N and 0 <= nj < M and arr[ni][nj] and not visited[ni][nj]:
            # 다음 위치가 범위 안이고, 이동 가능하고, 방문하지 않았다면
            Q.append((ni, nj, cnt+1))   # Q에 추가
            visited[ni][nj] = 1         # 방문 표시

print(mn_cnt)
