def bfs(si, sj):
    q = [(si, sj)]
    visited[si][sj] = 1
    # 상.하.좌.우.우상.우하.좌하.좌상
    di = [-1, 1, 0, 0, -1, 1, 1, -1]
    dj = [0, 0, -1, 1, 1, 1, -1, -1]

    while q:
        ci, cj = q.pop(0)
        for x in range(8):
            ni = ci + di[x]
            nj = cj + dj[x]
            if 0 <= ni < h and 0 <= nj < w and mmap[ni][nj] and not visited[ni][nj]:
                q.append((ni, nj))
                visited[ni][nj] = 1


while 1:
    w, h = map(int, input().split())
    if w == 0 and h == 0:
        break
    else:
        mmap = [list(map(int, input().split())) for _ in range(h)]
        ans = 0
        visited = [[0] * w for _ in range(h)]

        for si in range(h):
            for sj in range(w):
                if mmap[si][sj] and not visited[si][sj]:
                    bfs(si, sj)
                    ans += 1
        print(ans)
